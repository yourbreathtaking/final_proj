{"version":3,"sources":["webpack://leaflet-compare/webpack/bootstrap","webpack://leaflet-compare/webpack/runtime/compat get default export","webpack://leaflet-compare/webpack/runtime/define property getters","webpack://leaflet-compare/webpack/runtime/hasOwnProperty shorthand","webpack://leaflet-compare/external \"L\"","webpack://leaflet-compare/./src/leaflet-compare.js"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","L","mapWasDragEnabled","mapWasTapEnabled","on","el","types","fn","context","split","forEach","type","off","getRangeEvent","rangeInput","cancelMapDrag","this","_map","dragging","enabled","tap","disable","uncancelMapDrag","e","_refocusOnMap","enable","asArray","arg","Array","isArray","options","thumbSize","padding","position","leftLayers","rightLayers","_leftLayers","_rightLayers","_updateClip","rangeValue","_range","value","offset","getSize","x","includes","map","remove","_container","_controlContainer","_divider","min","max","step","style","paddingLeft","paddingRight","_addEvents","setPosition","leftLayer","getContainer","clip","getPane","rightLayer","_removeEvents","nw","containerPointToLayerPoint","se","clipX","getPosition","dividerX","left","fire","clipLeft","y","join","clipRight","range","_updateLayers","Compare"],"mappings":"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","file":"leaflet-compare.js","sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => module['default'] :\n\t\t() => module;\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","const __WEBPACK_NAMESPACE_OBJECT__ = L;","import L from \"leaflet\";\n\nlet mapWasDragEnabled;\nlet mapWasTapEnabled;\n\n// Leaflet v0.7 backwards compatibility\nfunction on(el, types, fn, context) {\n    types.split(\" \").forEach(type => {\n        L.DomEvent.on(el, type, fn, context);\n    });\n}\n\n// Leaflet v0.7 backwards compatibility\nfunction off(el, types, fn, context) {\n    types.split(\" \").forEach(type => {\n        L.DomEvent.off(el, type, fn, context);\n    });\n}\n\nfunction getRangeEvent(rangeInput) {\n    return \"oninput\" in rangeInput ? \"input\" : \"change\";\n}\n\nfunction cancelMapDrag() {\n    mapWasDragEnabled = this._map.dragging.enabled();\n    mapWasTapEnabled = this._map.tap && this._map.tap.enabled();\n    this._map.dragging.disable();\n    this._map.tap && this._map.tap.disable();\n}\n\nfunction uncancelMapDrag(e) {\n    this._refocusOnMap(e);\n    if (mapWasDragEnabled) {\n        this._map.dragging.enable();\n    }\n    if (mapWasTapEnabled) {\n        this._map.tap.enable();\n    }\n}\n\n// convert arg to an array - returns empty array if arg is undefined\nfunction asArray(arg) {\n    if (typeof arg === \"undefined\") {\n        return [];\n    }\n    if (Array.isArray(arg)) {\n        return arg;\n    }\n    return [arg];\n}\n\nL.Control.Compare = L.Control.extend({\n    options: {\n        thumbSize: 42,\n        padding: 0,\n        position: 0.5,\n    },\n\n    initialize(leftLayers, rightLayers, options) {\n        this._leftLayers = asArray(leftLayers);\n        this._rightLayers = asArray(rightLayers);\n        this._updateClip();\n        L.setOptions(this, options);\n    },\n\n    getPosition() {\n        const rangeValue = this._range.value;\n        const offset =\n            (0.5 - rangeValue) *\n            (2 * this.options.padding + this.options.thumbSize);\n        return this._map.getSize().x * rangeValue + offset;\n    },\n\n    setPosition(offset) {\n        if (!this._map) {\n            return this;\n        }\n        this._range.value = offset;\n        this._updateClip();\n        return this;\n    },\n\n    includes: L.Evented.prototype,\n\n    addTo(map) {\n        this.remove();\n        this._map = map;\n        this._container = L.DomUtil.create(\n            \"div\",\n            \"leaflet-sbs\",\n            // eslint-disable-next-line no-underscore-dangle\n            map._controlContainer,\n        );\n        this._divider = L.DomUtil.create(\n            \"div\",\n            \"leaflet-sbs-divider\",\n            this._container,\n        );\n        this._range = L.DomUtil.create(\n            \"input\",\n            \"leaflet-sbs-range\",\n            this._container,\n        );\n        this._range.type = \"range\";\n        this._range.min = 0;\n        this._range.max = 1;\n        this._range.step = \"any\";\n        this._range.value = 0.5;\n        // eslint-disable-next-line no-multi-assign\n        this._range.style.paddingLeft = this._range.style.paddingRight = `${this.options.padding}px`;\n        this._addEvents();\n        this._updateClip();\n        if (this.options.position) {\n            this.setPosition(this.options.position);\n        }\n        return this;\n    },\n\n    remove() {\n        if (!this._map) {\n            return this;\n        }\n        this._leftLayers.forEach(leftLayer => {\n            if (leftLayer.getContainer) {\n                leftLayer.getContainer().style.clip = \"\";\n            } else {\n                leftLayer.getPane().style.clip = \"\";\n            }\n        });\n\n        this._rightLayers.forEach(rightLayer => {\n            if (rightLayer.getContainer) {\n                rightLayer.getContainer().style.clip = \"\";\n            } else {\n                rightLayer.getPane().style.clip = \"\";\n            }\n        });\n        this._removeEvents();\n        L.DomUtil.remove(this._container);\n        this._map = null;\n        return this;\n    },\n\n    _updateClip() {\n        if (!this._map) {\n            return this;\n        }\n        const map = this._map;\n        const nw = map.containerPointToLayerPoint([0, 0]);\n        const se = map.containerPointToLayerPoint(map.getSize());\n        const clipX = nw.x + this.getPosition();\n        const dividerX = this.getPosition();\n        this._divider.style.left = `${dividerX}px`;\n        this.fire(\"dividermove\", { x: dividerX });\n        const clipLeft = `rect(${[nw.y, clipX, se.y, nw.x].join(\"px,\")}px)`;\n        const clipRight = `rect(${[nw.y, se.x, se.y, clipX].join(\"px,\")}px)`;\n\n        this._leftLayers.forEach(leftLayer => {\n            if (leftLayer.getContainer) {\n                leftLayer.getContainer().style.clip = clipLeft;\n            } else {\n                leftLayer.getPane().style.clip = clipLeft;\n            }\n        });\n\n        this._rightLayers.forEach(rightLayer => {\n            if (rightLayer.getContainer) {\n                rightLayer.getContainer().style.clip = clipRight;\n            } else {\n                rightLayer.getPane().style.clip = clipRight;\n            }\n        });\n        return this;\n    },\n\n    _addEvents() {\n        const range = this._range;\n        const map = this._map;\n        if (!map || !range) return;\n        map.on(\"move\", this._updateClip, this);\n        map.on(\"layeradd layerremove\", this._updateLayers, this);\n        on(range, getRangeEvent(range), this._updateClip, this);\n        on(\n            range,\n            L.Browser.touch ? \"touchstart\" : \"mousedown\",\n            cancelMapDrag,\n            this,\n        );\n        on(\n            range,\n            L.Browser.touch ? \"touchend\" : \"mouseup\",\n            uncancelMapDrag,\n            this,\n        );\n    },\n\n    _removeEvents() {\n        const range = this._range;\n        const map = this._map;\n        if (range) {\n            off(range, getRangeEvent(range), this._updateClip, this);\n            off(\n                range,\n                L.Browser.touch ? \"touchstart\" : \"mousedown\",\n                cancelMapDrag,\n                this,\n            );\n            off(\n                range,\n                L.Browser.touch ? \"touchend\" : \"mouseup\",\n                uncancelMapDrag,\n                this,\n            );\n        }\n        if (map) {\n            map.off(\"layeradd layerremove\", this._updateLayers, this);\n            map.off(\"move\", this._updateClip, this);\n        }\n    },\n});\n\nL.control.compare = function (leftLayers, rightLayers, options) {\n    return new L.Control.Compare(leftLayers, rightLayers, options);\n};\n\nexport const { Compare } = L.Control;\nexport default Compare;\n"],"sourceRoot":""}